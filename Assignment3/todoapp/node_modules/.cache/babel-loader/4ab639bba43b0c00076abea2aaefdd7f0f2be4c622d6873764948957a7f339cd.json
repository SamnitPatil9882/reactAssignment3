{"ast":null,"code":"var _jsxFileName = \"/home/samnit/JoshPractice/ReactPractice/Assignment3/todoapp/src/components/todoApp.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Heading from \"./heading\";\nimport InputDiv from \"./inputTodo\";\nimport useFetch from \"../hooks/useFetch\";\nimport TodoList from \"./todoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todoList, setTodoList] = useFetch(\"http://localhost:8000/todos\");\n  const addTodoData = (title, description) => {\n    if (title === \"\" || description === \"\") {\n      return;\n    }\n    const id = Math.abs(Math.floor(Math.random() * Date.now()));\n    const todoInfo = {\n      title,\n      isCompleted: false,\n      id,\n      description\n    };\n    setTodoList(todoList => [...todoList, todoInfo]);\n  };\n  const checkChanges = id => {\n    setTodoList(todoList.map(todo => {\n      if (todo.id === id) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen mx-auto bg-slate-500  \",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputDiv, {\n      addTodoData: addTodoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoApp, \"RrYjEbNcdrKqpVwhpnnPvRyKmOM=\", false, function () {\n  return [useFetch];\n});\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","Heading","InputDiv","useFetch","TodoList","jsxDEV","_jsxDEV","TodoApp","_s","todoList","setTodoList","addTodoData","title","description","id","Math","abs","floor","random","Date","now","todoInfo","isCompleted","checkChanges","map","todo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/samnit/JoshPractice/ReactPractice/Assignment3/todoapp/src/components/todoApp.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Heading from \"./heading\";\nimport InputDiv from \"./inputTodo\";\nimport todoInfo from \"../models/todoItem\";\nimport useFetch from \"../hooks/useFetch\";\nimport TodoItem from \"./todoItem\";\nimport TodoList from \"./todoList\";\nfunction TodoApp() {\n    const [todoList, setTodoList]= useFetch(\"http://localhost:8000/todos\")\n    const addTodoData = (title:string,description:string) => {\n        if (title === \"\"||description === \"\") {\n            return;\n        }\n        const id = Math.abs(Math.floor(Math.random() * Date.now()));\n        const todoInfo: todoInfo = { title, isCompleted: false, id,description };\n        setTodoList(todoList => [...todoList, todoInfo]);\n    };\n    const checkChanges = (id:number) => {\n        setTodoList(todoList.map((todo)=>{\n            if (todo.id === id) {\n                todo.isCompleted =!todo.isCompleted;\n            }\n            return todo;\n        }))\n    }\n\n    return (\n        <div className=\"h-screen w-screen mx-auto bg-slate-500  \">\n            <Heading />\n            <InputDiv addTodoData={addTodoData}/>\n            <TodoList todoList={todoList} />\n        </div>\n    )\n}\nexport default TodoApp;"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,aAAa;AAElC,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAEP,QAAQ,CAAC,6BAA6B,CAAC;EACtE,MAAMQ,WAAW,GAAGA,CAACC,KAAY,EAACC,WAAkB,KAAK;IACrD,IAAID,KAAK,KAAK,EAAE,IAAEC,WAAW,KAAK,EAAE,EAAE;MAClC;IACJ;IACA,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAMC,QAAkB,GAAG;MAAET,KAAK;MAAEU,WAAW,EAAE,KAAK;MAAER,EAAE;MAACD;IAAY,CAAC;IACxEH,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEY,QAAQ,CAAC,CAAC;EACpD,CAAC;EACD,MAAME,YAAY,GAAIT,EAAS,IAAK;IAChCJ,WAAW,CAACD,QAAQ,CAACe,GAAG,CAAEC,IAAI,IAAG;MAC7B,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,EAAE;QAChBW,IAAI,CAACH,WAAW,GAAE,CAACG,IAAI,CAACH,WAAW;MACvC;MACA,OAAOG,IAAI;IACf,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,0CAA0C;IAAAC,QAAA,gBACrDrB,OAAA,CAACL,OAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXzB,OAAA,CAACJ,QAAQ;MAACS,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrCzB,OAAA,CAACF,QAAQ;MAACK,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAACvB,EAAA,CA1BQD,OAAO;EAAA,QACmBJ,QAAQ;AAAA;AAAA6B,EAAA,GADlCzB,OAAO;AA2BhB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}